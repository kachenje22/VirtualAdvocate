@model VirtualAdvocate.Models.ChangePassword
@{
    ViewBag.MenuActive = "DashBoard";
    //ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layoutmain.cshtml";
}

<h2>CHANGE PASSWORD</h2>

@using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-horizontal", id = "ChangePasswordForm" , onsubmit = "showProgress()" }))
{
    @Html.AntiForgeryToken()
    <hr />

    <div class="alert-box success" style="display: none;">
        <span>success: </span><span class="successMessage">message</span>
    </div>
    <div class="alert-box errorMsg" style="display: none;">
        <span>error: </span><span class="errorMessage">message</span>
    </div>

    <div class="form-group">
        <div class="col-lg-4 control-label">
        </div>
        <div class="col-lg-6">
            <span class="text-danger">@ViewBag.message</span>
        </div>
    </div>
    <div class="row">
        @if (Convert.ToInt32(Session["RoleId"]) != 3 && Convert.ToInt32(Session["RoleId"]) != 5 && Convert.ToInt32(Session["RoleId"]) != 7)
        {
        <div  class="col-lg-12">
            <div class="navbar-form navbar-right">
                <label>@Html.RadioButton("Pwd", "MyPassword",true)My Password</label>
                <label>@Html.RadioButton("Pwd", "Others")Others</label>
            </div>
            </div>
        }
        <div class="col-lg-6">
@if (Convert.ToInt32(Session["RoleId"]) != 3 && Convert.ToInt32(Session["RoleId"]) != 5 && Convert.ToInt32(Session["RoleId"]) != 7)
{
            <div class="form-group" id="users" style="display:none">
                @Html.Label("Select Users", new { @class = "col-lg-6 control-label" })
                <div class="col-lg-6">
                    @Html.DropDownListFor(m => m.userId, new SelectList(Model.getAllUsers, "ID", "Name"), "-Select-", new { @class = "form-control" })
                </div>
            </div>
}
            <div class="form-group">
                @Html.LabelFor(m => m.password, new { @class = "col-lg-6 control-label" })

                <div class="col-lg-6">
                    @Html.PasswordFor(m => m.password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.password, string.Empty, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.newpassword, new { @class = "col-lg-6 control-label" })

                <div class="col-lg-6">
                    @Html.PasswordFor(m => m.newpassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.newpassword, string.Empty, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Confirmpassword, new { @class = "col-lg-6 control-label" })
                <div class="col-lg-6">
                    @Html.PasswordFor(m => m.Confirmpassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Confirmpassword, string.Empty, new { @class = "text-danger" })
                </div>
            </div>
           
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <div class="col-md-offset-2">
                    <input type="submit" class="btn btn-default" id="ChangePassword" value="Change Password" />&nbsp;&nbsp;    
                    <button type="button" value="Cancel" class="btn btn-cancel" id="btncancel" onclick="history.go(-1);">Cancel</button>
                </div>
                
            </div>
        </div>
    </div>




}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

        function ShowSuccess(message) {
            $(".successMessage").text(message);
            $(".success").delay(0).fadeIn("slow");
            $(".success").delay(3000).fadeOut("slow");
        }
        function ShowError(message) {
            $(".errorMessage").text(message);
            $(".errorMsg").delay(0).fadeIn("slow");
            $(".errorMsg").delay(3000).fadeOut("slow");
        }
        $(document).ajaxError(function (e, jqxhr, settings, exception) {
            if (jqxhr.readyState == 0 || jqxhr.status == 0) {
                alert("sddssd");
                return; //Skip this error
            }
        });

        $(document).ready(function () {
            var resetButton = $("#ChangePassword");
            var resetPasswordForm = $("#ChangePasswordForm");
            resetButton.click(function (e) {
                e.preventDefault();
                if (resetPasswordForm.valid()) {
                    showProgress();
                    $.ajax({
                        type: "POST",
                        dataType: "json",
                        contentType: "application/json",
                        url: "../ChangePassword",
                        data: JSON.stringify(resetPasswordForm.serializeObject()),
                        beforeSend: function () { resetButton.prop("disabled", true); resetButton.val("Processing...") }
                    })
        .success(function (data) {
            if (data.success) {
                ShowSuccess(data.message);
                setTimeout(function () {
                    window.location.href = '@Url.Content("~/Login/Index")';
                }, 2002);

            }
            else
                ShowError(data.message);
            resetButton.prop("disabled", false);
            resetButton.val("Change Password");

        })
        .error(function (xhr, status, error) {
            ShowError(error);
            resetButton.prop("disabled", false);
            resetButton.val("Change Password");
        });
                    return false;
                }
            });

            jQuery.fn.serializeObject = function () {
                var arrayData, objectData;
                arrayData = this.serializeArray();
                objectData = {};

                $.each(arrayData, function () {
                    var value;

                    if (this.value != null) {
                        value = this.value;
                    } else {
                        value = '';
                    }

                    if (objectData[this.name] != null) {
                        if (!objectData[this.name].push) {
                            objectData[this.name] = [objectData[this.name]];
                        }

                        objectData[this.name].push(value);
                    } else {
                        objectData[this.name] = value;
                    }
                });

                return objectData;
            };

        });

    $('input:radio').change(function () {
        $("#users").toggle();
    });


</script>
}
