@model VirtualAdvocate.Models.InsuranceViewModel
@{
    ViewBag.MenuActive = "Tracker";
    ViewBag.Title = "AddInsurance";
    Layout = "~/Views/Shared/_Layoutmain.cshtml";
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="~/Scripts/jquery-1.11.3.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<h2>Add Insurance</h2>

@using (Html.BeginForm("Create", "InsuranceTracker", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12">
            <div class="well bs-component">
                <fieldset>
                    @*<legend>Add Insurance</legend>*@
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                @Html.ValidationMessage("PageError", "", new { @class = "text-danger col-md-offset-1" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <label for="select" class="col-lg-2 control-label">Name</label>

                                        <div class="col-lg-4">
                                            @Html.DropDownList("CustomerId", null, "Select Customer", new { @class = "form-control" })
                                            @*@Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })*@
                                            @Html.ValidationMessage("CustomerId", "", new { @class = "text-danger" })
                                        </div>

                                        <label for="select" class="col-lg-2 control-label">Document Title</label>

                                        <div class="col-lg-4">
                                            @Html.DropDownListFor(model => model.DocumentId, null, "Select Document", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.DocumentId, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group">

                                        <label for="select" class="col-lg-2 control-label">Asset Insured</label>

                                        <div class="col-lg-4">
                                            @Html.DropDownListFor(model => model.Asset, null, "Select Asset", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Asset, "", new { @class = "text-danger" })
                                        </div>


                                        <label for="select" class="col-lg-2 control-label">Insurer</label>
                                        <div class="col-lg-4">
                                            @Html.EditorFor(model => model.Insurer, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Insurer, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>

                                <div class="col-lg-12">
                                    <div class="form-group">

                                        <label for="select" class="col-lg-2 control-label">Currency</label>
                                        <div class="col-lg-4">
                                            @Html.EditorFor(model => model.Currency, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Currency, "", new { @class = "text-danger" })
                                        </div>

                                        <label for="select" class="col-lg-2 control-label">Amount Insured</label>
                                        <div class="col-lg-4">
                                            @Html.EditorFor(model => model.AmountInsured, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.AmountInsured, "", new { @class = "text-danger" })
                                        </div>




                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <label for="select" class="col-lg-2 control-label">Date of Insurance</label>
                                        <div class="col-lg-4">
                                            @Html.EditorFor(model => model.DateOfInsurance, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.DateOfInsurance, "", new { @class = "text-danger" })
                                        </div>

                                        <label for="select" class="col-lg-2 control-label">Expiry Date</label>
                                        <div class="col-lg-4">
                                            @Html.EditorFor(model => model.DateOfExpiry, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.DateOfExpiry, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                    <hr class="bottom-spacing-25">
                </fieldset>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="col-md-2">
                    <input type="submit" value="Add" class="btn btn-default" id="btnCreateSubmit" />
                </div>
                <div class="">
                    <a href="/InsuranceTracker" class="btn btn-cancel">Cancel</a>
                    @*<button type="button" value="Cancel" class="btn btn-cancel" id="btncancel" onclick="location.href=''">Cancel</button>*@
                </div>
            </div>
        </div>
    </div>

}

<script>
    var $j = jQuery.noConflict();
    $j('#DateOfInsurance').datepicker({
        dateFormat: 'dd-mm-yy',
        changeMonth: true,
        changeYear: true,
        onSelect: function (date, e) {

            //console.log(e);

            var selectedDate = new Date(date);
            var msecsInADay = 86400000;
            var endDate = new Date(selectedDate.getTime() + msecsInADay);

            //Set Minimum Date of EndDatePicker After Selected Date of StartDatePicker
            $j("#DateOfExpiry").datepicker("option", "minDate", date);
            //$("#DateOfExpiry").datepicker("option", "maxDate", '+2y');

        }
    });
    
    $j("#DateOfExpiry").datepicker({
        dateFormat: 'dd-mm-yy',
        changeMonth: true,
        changeYear: true
    });



    $j('#CustomerId').change(function () {
        var id = $('#CustomerId').val();

        if (id != '') {
            $.ajax({
                url: '/InsuranceTracker/GetDocumentsByCustomer?id=' + id,
                contentType: 'json',
                type: 'GET',
                success: function (result) {
                    console.log(result);
                    $('#DocumentId option[value!=""]').remove();
                    $('#Asset option[value!=""]').remove();
                    //$('#DocumentId').append('<option value="">Select Document</option>');
                    if (result != 'Error') {
                        if (result.length > 0) {
                            for (i = 0; i < result.length; i++) {
                                $('#DocumentId').append('<option value="' + result[i].TemplateId + '">' + result[i].DocumentTitle + '</option>');
                            }
                        }
                    }
                    else {
                        alert('Error occurred');
                    }
                },
                error: function () {
                    console.log('error');
                }
            })
        }
        else {
            $('#DocumentId option[value!=""]').remove();
        }
    })

    $j('#DocumentId').change(function () {
        var id = $('#DocumentId').val();
        var customerId = $('#CustomerId').val();

        if (id != '') {
            $.ajax({
                url: '/InsuranceTracker/GetAssetsByDocument?Id=' + id + '&CustomerId=' + customerId,
                contentType: 'json',
                type: 'GET',
                success: function (result) {
                    console.log(result);
                    $('#Asset option[value!=""]').remove();
                    //$('#DocumentId').append('<option value="">Select Document</option>');
                    if (result != 'Error') {
                        if (result.length > 0) {
                            for (i = 0; i < result.length; i++) {
                                $('#Asset').append('<option value="' + result[i].Id + '">' + result[i].PropertyName + '</option>');
                            }
                        }
                    }
                    else {
                        alert('Error occurred');
                    }
                },
                error: function () {
                    console.log('error');
                }
            })
        }
        else {
            $('#Asset option[value!=""]').remove();
        }
    })

    $j('#DateOfInsurance').keyup(function () {
        $j('#DateOfInsurance').val('');
    })
</script>

