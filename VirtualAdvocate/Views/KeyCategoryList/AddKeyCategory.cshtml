@model VirtualAdvocate.Models.KeyCategoryModel
@{
    ViewBag.MenuActive = "AddKeyCategory";
    Layout = "~/Views/Shared/_Layoutmain.cshtml";
}

<h2>Add Key Category</h2>

@using (Html.BeginForm("AddKeyCategory", "KeyCategoryList", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{

    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12">
            <div class="well bs-component">
                <fieldset>


                    <div class="col-lg-12">
                        <div class="form-group">
                            @Html.Label("Key Category Name", htmlAttributes: new { @class = "col-lg-3 control-label", @maxlength = 10 })
                            <div>
                                @Html.EditorFor(model => model.CategoryName, new { htmlAttributes = new { @class = "form-control col-lg-6", @placeholder = "KeyCategory" } })
                                @Html.ValidationMessageFor(model => model.CategoryName, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.Label("Key Category Description", htmlAttributes: new { @class = "col-lg-3 control-label", @maxlength = 10 })
                            <div>
                                @Html.EditorFor(model => model.CategoryDescription, new { htmlAttributes = new { @class = "form-control col-lg-6", @placeholder = "Category Description" } })
                                @Html.ValidationMessageFor(model => model.CategoryDescription, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.Label("Key Category Order", htmlAttributes: new { @class = "col-lg-3 control-label", @maxlength = 10 })
                            <div>
                                @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control col-lg-6", @placeholder = "Category Order" } })
                                @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
                            </div>

                        </div>

                        <div class="form-group">
                            @Html.Label("Provide Insurance ?", htmlAttributes: new { @class = "col-lg-3 control-label", @maxlength = 10 })
                            <div>
                                @Html.EditorFor(model => model.CanAddInsurance, new { htmlAttributes = new { @style = "margin: 9px 0 0 0;" } })
                                @*@Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })*@
                            </div>

                        </div>


                    </div>
                </fieldset>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="col-md-2">
                    <input type="submit" class="btn btn-default" value="Submit" />
                </div>
                <div class="">
                    <button type="button" value="Cancel" class="btn btn-cancel" id="btncancel" onclick="location.href='@Url.Action("KeyCategoryList","KeyCategoryList")'">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



