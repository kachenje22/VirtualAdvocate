@model VirtualAdvocate.Models.ManualInvoiceModel
@{
    ViewBag.MenuActive = "InvoiceList";
    Layout = "~/Views/Shared/_Layoutmain.cshtml";
}

<h2>Invoice</h2>

<!-- DataTables CSS -->
<link href="@Url.Content("~/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css")" rel="stylesheet" type="text/css" />
<!-- DataTables Responsive CSS -->
<link href="@Url.Content("~/bower_components/datatables-responsive/css/dataTables.responsive.css")" rel="stylesheet" type="text/css" />
@using (Html.BeginForm("GenerateInvoice", "DocumentManagement", FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-lg-12">
            <div class="well bs-component">
                <fieldset>
                    <legend>Documents List</legend>
                    <div class="form-group">
                        <div class="col-lg-12 form-inline">
                            <table class="table table-striped table-hover dataTable table-custom-border" id="tblTemplateList">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>@Html.DisplayName("Template Name")</th>                                       
                                        <th>@Html.DisplayName("Quantity")</th>
                                        <th>@Html.DisplayName("Cost")</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{int rowNo = 0;}
                                    @for (int i = 0; i < Model.getManualList.Count; i++)
                                    {
                                        rowNo = rowNo + 1;

                                        <tr>
                                            <td>@rowNo</td>
                                            <td>
                                                @Html.HiddenFor(m => Model.getManualList[i].TemplateId)
                                                @Html.HiddenFor(m => Model.getManualList[i].DocumentTitle)
                                                @Html.DisplayFor(modelItem => Model.getManualList[i].DocumentTitle)
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(modelItem => Model.getManualList[i].Quantity)<br />
                                                @Html.ValidationMessageFor(modelItem => Model.getManualList[i].Quantity, string.Empty, new { @class = "text-danger" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(modelItem => Model.getManualList[i].DocumentCost, "{0:0.00}")<br />
                                                @Html.ValidationMessageFor(modelItem => Model.getManualList[i].DocumentCost, string.Empty, new { @class = "text-danger" })
                                            </td>
                                        </tr>
                                    }
                                    @*@foreach (var item in Model.getManualList)
                                    {
                                        rowNo = rowNo + 1;

                                        <tr>
                                            <td>@rowNo</td>
                                            <td>
                                                @Html.HiddenFor(m => item.TemplateId)
                                                @Html.DisplayFor(modelItem => item.DocumentTitle)
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(modelItem => item.Quantity)<br />
                                                @Html.ValidationMessageFor(modelItem => item.Quantity, string.Empty, new { @class = "text-danger" })
                                            </td>
                                            <td>
                                                @Html.EditorFor(modelItem => item.DocumentCost, "{0:0.00}")<br />
                                                @Html.ValidationMessageFor(modelItem => item.DocumentCost, string.Empty, new { @class = "text-danger" })
                                            </td>
                                        </tr>

                                    }*@
                                  
                                </tbody>
                            </table>
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="col-md-2">
                    @Html.HiddenFor(m => m.CustomerId)
                    @Html.HiddenFor(m => m.GroupId)
                    <input type="submit" class="btn btn-default" value="Generate" id="btnSubmit" />
                </div>
                <div class="">
                    <button type="button" value="Cancel" class="btn btn-cancel" id="btncancel" onclick="location.href='@Url.Action("InvoiceList","DocumentManagement")'">Cancel</button>
                </div>
            </div>
        </div>
    </div>

                                        }
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
                $(document).ready(function () {
                    $('#tblTemplateList').DataTable({
                        "dom": '<"top"f>rt<"bottom"lp><"clear">',
                        responsive: true
                    });

                });
    </script>
}