@model VirtualAdvocate.Models.ReportsListModel
@{
    ViewBag.MenuActive = "Reports";

    Layout = "~/Views/Shared/_Layoutmain.cshtml";
    var val = Json.Encode(Model);
}

<h2>REPORTS</h2>


    
    <link rel="stylesheet" href="~/Content/themes/base/datepicker.css" />
    <link rel="stylesheet" href="~/Content/themes/base/jquery-ui.css" />
@*<link rel="stylesheet" href="~/Content/dataTables.tableTools.css" />
<link rel="stylesheet" href="~/Content/jquery.dataTables.css" />*@
    <!-- DataTables CSS -->
    <link href="@Url.Content("~/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css")" rel="stylesheet" type="text/css" />
    <!-- DataTables Responsive CSS -->
    <link href="@Url.Content("~/bower_components/datatables-responsive/css/dataTables.responsive.css")" rel="stylesheet" type="text/css" />
    <div class="row">
@using (Html.BeginForm("Reports", "DocumentManagement", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(h => h.CurrentOrgId)

    <div class="well bs-component">

        <fieldset>
            <legend>
                Search By</legend>

                <div class="row">
                    <div class="col-lg-12">

                        <div class="form-group">
                            @Html.Label("From Date", new { @class = "col-lg-2 control-label" })
                            <div class="col-lg-4">
                                @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control date-input", @autocomplete = "off", @Value = (!string.IsNullOrEmpty(Model.FromDate)) ? Convert.ToDateTime(Model.FromDate).ToString("MM/dd/yyyy") : string.Empty })

                            </div>
                        </div>
                            <div class="form-group">



                                @Html.Label("To Date", new { @class = "col-lg-2 control-label" })
                                <div class="col-lg-4">
                                    @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control date-input", @autocomplete = "off", @Value = (!string.IsNullOrEmpty(Model.ToDate)) ? Convert.ToDateTime(Model.ToDate).ToString("MM/dd/yyyy") : string.Empty })

                                </div>
                            </div>

                    </div>
                </div>

                    <div class="row">
                        @if (Convert.ToInt32(Session["RoleId"]) == 1)
                {
                            <div class="col-lg-12">
                                <div class="form-group">
                                    @Html.Label("Company Name", new { @class = "col-lg-2 control-label" })
                                    <div class="col-lg-4">
                                        @Html.DropDownListFor(m => m.OrgId, new SelectList(Model.getAllOrganization, "ID", "Name"), "-Select-", new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Company Users", new { @class = "col-lg-2 control-label" })
                                    <div class="col-lg-4">
                                        @Html.DropDownListFor(m => m.UserId, new SelectList(Model.getAllOrgUsers, "ID", "Name"), "-Select-", new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label for="select" class="col-lg-2 control-label">Category</label>
                                <div class="col-lg-4">
                                    @Html.DropDownListFor(m => m.DocumentCategoryId, new SelectList(Model.getAllCategory, "ID", "Name"), "-Select-", new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="select" class="col-lg-2 control-label">Sub Category</label>
                                <div class="col-lg-4">
                                    @Html.DropDownListFor(m => m.DocumentSubCategoryId, new SelectList(Model.getAllSubCategory, "ID", "Name"), "-Select-", new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label for="select" class="col-lg-2 control-label">Sub Sub Category</label>
                                <div class="col-lg-4">
                                    @Html.DropDownListFor(m => m.DocumentSubSubCategoryId, new SelectList(Model.getAllSubSubCategory, "ID", "Name"), "-Select-", new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                           
                                @if (Convert.ToInt32(Session["RoleId"]) == 1)
                                {
                                    <div class="form-group">
                                        @Html.Label("Individual Users", new { @class = "col-lg-2 control-label" })
                                        <div class="col-lg-4">
                                            @Html.DropDownListFor(m => m.IndividualUserId, new SelectList(Model.getSingleUserCompanyList, "ID", "Name"), "-Select-", new { @class = "form-control" })
                                        </div>
                                        </div>
                                        }
                                        @if (Convert.ToInt32(Session["RoleId"]) == 2 || Convert.ToInt32(Session["RoleId"]) == 6)
                                        {
                                            <div class="form-group">
                                                @Html.Label("Users List", new { @class = "col-lg-2 control-label" })
                                                <div class="col-lg-4">
                                                    @Html.DropDownListFor(m => m.OrgUserId, new SelectList(Model.getAllOrgUsers1, "ID", "Name"), "-Select-", new { @class = "form-control" })
                                                </div>
                                            </div>
                                        }
                                          
                        </div>

                    </div>
            </fieldset>
        </div>



        <div class="row">
            <div class="col-lg-12">
                <div class="col-md-2">
                    <input type="submit" class="btn btn-default" value="Submit" id="btnSubmit" />
                </div>
                @*<div class="">
                        <button type="button" value="Cancel" class="btn btn-cancel" id="btncancel" onclick="location.href='@Url.Action("Index","DocumentManagement")'">Cancel</button>
                    </div>*@
            </div>
        </div>
        }
        <div class="row">
            <div class="col-lg-12">
                <div class="col-md-3">

                </div>
                <div class="col-md-9">
                    <div class="navbar-form navbar-right" role="search">
                        <button type="submit" id="btnExport" class="btn btn-default"><i class="fa fa-download"></i> Download</button>
                        @Html.HiddenFor(m => m.ExcelExportStatus)
                    </div>

                </div>
            </div>

 </div>

      
        <div class="row" id="ReportListDiv">
            <div class="col-lg-12">
                <table class="table table-striped table-hover dataTable table-custom-border" id="tblReportList">
                    @*<table class="display" id="tblReportList">*@
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Document Title</th>
                            <th>Document Type</th>
                            <th>Organization Name</th>
                            <th>CustomerName</th>
                            <th>Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{int rowNo = 0;}
                        @foreach (var item in Model.getReportDetails)
                        {
                            rowNo = rowNo + 1;
                            <tr>
                                <td>@rowNo</td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DocumentTitle)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DocumentType)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OrgName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CustomerName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedDate)
                                </td>
                            </tr>

                        }

                    </tbody>

                </table>
            </div>
        </div>

     
      

    </div>
 
 


@section Scripts {
   @*@Scripts.Render("~/bundles/DataTableTools")*@ 
    @Scripts.Render("~/bundles/jquery")

    @Scripts.Render("~/bundles/jqueryUI")
    <script src="@Url.Content("~/bower_components/datatables/media/js/jquery.dataTables.min.js")"></script>
    <script src="@Url.Content("~/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js")"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#tblReportList').DataTable({
                "dom": '<"top"f>rt<"bottom"lp><"clear">',                
                responsive: true
              
            });
            var rowCount = $('#tblReportList >tbody >tr').length;
            debugger;
            if (rowCount > 0)
            {
                $('td').filter(function () {
                    if ($(this).text() == "No data available in table") {
                        $("#btnExport").hide();
                    }
                    else {
                        $("#btnExport").show();// Default hide Export button    
                    }
                    });

                       
            }
            else {
                $("#btnExport").hide();// Default hide Export button              
            }

            if ($("#ReportTypeId").val() != 1)
            {
                DateVal();
            }
            

            $("#ReportTypeId").change(function () {
                $("#ReportListDiv").empty();
                HideShow();
                DateVal();
                $("#btnExport").hide();  
            });

            if ($("#ReportTypeId").val() != null) {
                HideShow();
            }
            $(function () {

                $('input[name="ReportTypeId"]').rules('add', {
                    required: true,
                    messages: {
                        required: "Please Select The Report Type"
                    }
                });

            });


            $('#FromDate').datepicker();
            $('#ToDate').datepicker();

            function DateVal() {
                var today = new Date();
                var dd = today.getDate();
                var mm = today.getMonth() + 1; //January is 0!
                var fd = dd - 1;
                var yyyy = today.getFullYear();
                if (dd < 10) {
                    dd = '0' + dd
                }
                if (fd < 10) {
                    fd = '0' + fd
                }
                if (mm < 10) {
                    mm = '0' + mm
                }
                var startday = mm + '/' + fd + '/' + yyyy;
                var endday = mm + '/' + dd + '/' + yyyy;
                //$("#FromDate").val(startday);
                //$("#ToDate").val(endday);
            }
            function HideShow() {
                //var Startdate = new Date();
                //var todaydate = Startdate.toDateString();

                if ($("#ReportTypeId").val() == 1) {
                    $("#date").show();
                    $("#company").hide();
                    $("#document").hide();
                    $("#user").hide();


                } else if ($("#ReportTypeId").val() == 2) {
                    $("#date").hide();
                    $("#company").show();
                    $("#document").hide();
                    $("#user").hide();


                } else if ($("#ReportTypeId").val() == 3) {
                    $("#date").hide();
                    $("#company").hide();
                    $("#document").hide();
                    $("#user").show();
                }
                else if ($("#ReportTypeId").val() == 4) {
                    $("#date").hide();
                    $("#company").hide();
                    $("#document").show();
                    $("#user").hide();
                }
                else {
                    $("#date").hide();
                    $("#company").hide();
                    $("#document").hide();
                    $("#user").hide();
                }
            }



            $("#OrgId").change(function () {
                if ($("#OrgId").val() != "") {
                    var options = {};
                    options.url = "@Url.Content("~/DocumentManagement/GetOrganizationUsersList")";
                    options.type = "POST";
                    options.data = JSON.stringify({ id: $("#OrgId").val() });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (UserList) {
                        $("#UserId").empty();
                        if (UserList.length > 0)
                        {
                            for (var i = 0; i < UserList.length; i++) {
                                if (i == 0) {
                                    $("#UserId").append("<option value=''>- Please Select -</option>");
                                }
                                $("#UserId").append("<option value=" + UserList[i].ID + ">" + UserList[i].Name + "</option>");
                            }

                        } else {
                            $("#UserId").empty();
                        }

                    };
                    options.error = function () { alert("Error retrieving organization users!"); };
                    $.ajax(options);
                }
                else {
                    $("#UserId").empty();
                    $("#UserId").prop("disabled", true);
                }
            });


            $("#DocumentCategoryId").change(function () {
                debugger;
                if ($("#DocumentCategoryId").val() != "") {                  
                    var options = {};
                    options.url = "@Url.Content("~/DocumentManagement/GetSubCategoryListById")";
                    options.type = "POST";
                    options.data = JSON.stringify({ id: $("#DocumentCategoryId").val() });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (result) {

                        $("#DocumentSubCategoryId").empty();
                        for (var i = 0; i < result.DocumentSubCategory.length; i++) {
                            if (i == 0)
                            {
                                $("#DocumentSubCategoryId").append("<option value=''>- Please Select -</option>");
                            }
                            $("#DocumentSubCategoryId").append("<option value=" + result.DocumentSubCategory[i].ID + ">" + result.DocumentSubCategory[i].Name + "</option>");
                        }
                        if (result.DocumentSubCategory.length == 0) {
                            $("#DocumentSubCategoryId").prop("disabled", true); $("#DocumentSubSubCategoryId").empty();
                            $("#DocumentSubSubCategoryId").prop("disabled", true);
                        } else {
                            $("#DocumentSubCategoryId").prop("disabled", false); $("#DocumentSubSubCategoryId").empty();
                            $("#DocumentSubSubCategoryId").prop("disabled", true);
                        }

                    };
                    options.error = function () { alert("Error retrieving Document Sub Category!"); };
                    $.ajax(options);
                }
                else {
                    $("#DocumentSubCategoryId").empty();
                    $("#DocumentSubCategoryId").prop("disabled", true);
                    $("#DocumentSubSubCategoryId").empty();
                    $("#DocumentSubSubCategoryId").prop("disabled", true);
                }
            });

            $("#DocumentSubCategoryId").change(function () {
                if ($("#DocumentSubCategoryId").val() != "") {                    
                    var options = {};
                    options.url = "@Url.Content("~/DocumentManagement/GetSubSubCategoryById")";
                    options.type = "POST";
                    options.data = JSON.stringify({ id: $("#DocumentSubCategoryId").val() });
                    options.dataType = "json";
                    options.contentType = "application/json";
                    options.success = function (DocumentSubSubCategory) {                      
                        $("#DocumentSubSubCategoryId").empty();
                        if (DocumentSubSubCategory.length > 0)
                        {
                            for (var i = 0; i < DocumentSubSubCategory.length; i++) {
                                if (i == 0) {
                                    $("#DocumentSubSubCategoryId").append("<option value=''>- Please Select -</option>");
                                }
                                $("#DocumentSubSubCategoryId").append("<option value=" + DocumentSubSubCategory[i].ID + ">" + DocumentSubSubCategory[i].Name + "</option>");
                            }
                            $("#DocumentSubSubCategoryId").prop("disabled", false);
                        } else {
                            $("#DocumentSubSubCategoryId").empty();
                            $("#DocumentSubSubCategoryId").prop("disabled", true);
                        }

                    };
                    options.error = function () { alert("Error retrieving Document Sub Category!"); };
                    $.ajax(options);
                }
                else {
                    $("#DocumentSubSubCategoryId").empty();
                    $("#DocumentSubSubCategoryId").prop("disabled", true);
                }
            });


            //Excel Export
            $("#btnExport").click(function () {
                $("#ExcelExportStatus").val(1);             
            });
            $("#btnSubmit").click(function () {

                @*var model = {
                    FromDate:"",
                    ToDate: "",
                    UserId: "",
                    OrgUserId: "1",
                    IndividualUserId: "1",
                    DocumentCategoryId: "1",
                    DocumentSubCategoryId: "",
                    DocumentSubSubCategoryId: "",
                    CurrentOrgId:""

                };

                $.ajax({
                    url: '@Url.Action("GetReportData", "DocumentManagement")',
                    data: JSON.stringify(model),
                    cache: false,
                    type: "POST",
                    dataType: "html",
                    success: function (data, textStatus, XMLHttpRequest) {
                        SetData(data);
                    }
                });*@

                $("#ExcelExportStatus").val(0);              
            });

            function SetData(data) {
                debugger;
                $("#divPartialView").html(data); // HTML DOM replace
            }
            
            $("#excelExport").click(function () {
                
              

                $.ajax({
                    url: '@Url.Content("~/DocumentManagement/ReportsByDate")',
                    type: 'POST',
                    data: { reportType: "1", FromDate: $("#FromDate").val(), ToDate: $("#ToDate").val() },
                    dataType: 'json',
                    success: function (result) { alert(result); },
                    error: function () { alert('Error!'); }
                });
            });


            $("#btnExport").click(function () {
                
                debugger;
                $.ajax({
                    url: '@Url.Content("~/DocumentManagement/ExcelExport")',
                    type: 'POST',
                    data: { reportTypeId: "1", FromDate: $("#FromDate").val(), ToDate: $("#ToDate").val(), OrguserId: $("#OrgUserId").val(), documentCategory: $("#DocumentCategoryId").val(), documentsubCategory: $("#DocumentSubCategoryId").val(), documentSubSubCategory: $("#DocumentSubSubCategoryId").val(), companyID: $("#OrgId").val(), companyUser: $("#UserId").val(), indUser: $("#IndividualUserId").val() },
                    dataType: 'json',
                    success: function (result) {  window.location.href = "../DocumentManagement/DownloadExcel?path=" + result; },
                    error: function () { alert('Error!'); }
                });
            });
        });
        

    </script>

}