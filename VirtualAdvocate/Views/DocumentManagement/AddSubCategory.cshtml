@model VirtualAdvocate.Models.DocumentSubCategoryModel
@{
    ViewBag.MenuActive = "DocumentManagement";
    //ViewBag.Title = "ADD SUB CATEGORY";
    Layout = "~/Views/Shared/_Layoutmain.cshtml";
}

<h2>ADD SUB CATEGORY</h2>

@using (Html.BeginForm("AddSubCategory", "DocumentManagement", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form", onsubmit = "showProgress()" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-lg-12">
            <div class="well bs-component">
                <fieldset>
                    <legend>Document Category</legend>

                    <div class="row">
                        <div class="col-lg-6">
                            <div class="form-group">
                                @Html.Label("Select Category Name", new { @class = "col-lg-6 control-label" })
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(m => m.DocumentCategoryId, new SelectList( Model.getAllCategory,"ID","Name"),"-Select-", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.DocumentCategoryId, string.Empty, new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">                               
                                @Html.Label("Document Sub Category Name", new { @class = "col-lg-6 control-label" })
                                <div class="col-lg-6">
                                    @Html.TextBoxFor(m => m.DocumentSubCategoryName, new { @class = "form-control", @placeholder = "Sub Category Name" })
                                    @Html.ValidationMessageFor(m => m.DocumentSubCategoryName, string.Empty, new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Document Sub Category Description", new { @class = "col-lg-6 control-label" })
                                <div class="col-lg-6">
                                    @Html.TextBoxFor(m => m.DocumentSubCategoryDescription, new { @class = "form-control", @placeholder = "Sub Category Description" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.Label("Category Icon", new { @class = "col-lg-6 control-label" })
                                <div class="col-lg-6">
                                    <div class="row">
                                        <div class="col-lg-12">
                                            <div class="col-lg-8">
                                                <input name="uploadFile" type="file" accept=".jpeg, .jpg, .png, .gif, .bmp" onchange="readURL(this);" />
                                            </div>
                                            <div class="col-lg-8 margin-top-10">
                                                <img id="blah" src="@Model.ImagePath" alt="" />
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="col-md-2">
                    <input type="submit" class="btn btn-default" value="Submit" />
                </div>
                <div class="">
                    <button type="button" value="Cancel" class="btn btn-cancel" id="btncancel" onclick="location.href='@Url.Action("Index","DocumentManagement")'">Cancel</button>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
@Scripts.Render("~/bundles/bootbox")
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    function readURL(input) {
        if (input.files && input.files[0]) {
            var file = input.files[0];
            var fileType = file["type"];
            var ValidImageTypes = ["image/gif", "image/jpeg", "image/png"];
            if ($.inArray(fileType, ValidImageTypes) < 0) {
                
                bootbox.alert("Please upload valid Icon");

            }
            else

            {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#blah')
                        .attr('src', e.target.result)
                        .width(150)
                        .height(200);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    }
</script>
}