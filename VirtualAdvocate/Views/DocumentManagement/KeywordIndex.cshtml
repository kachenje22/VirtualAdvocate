@model IEnumerable<VirtualAdvocate.Models.TemplateKeyword>
@{
    ViewBag.MenuActive = "Templatekey";
    //ViewBag.Title = "TEMPLATE KEY LIST";
    Layout = "~/Views/Shared/_Layoutmain.cshtml";
}

<h2>TEMPLATE KEY LIST</h2>

<!-- DataTables CSS -->
@*<link href="https://cdn.datatables.net/1.10.12/css/jquery.dataTables.min.css" rel="stylesheet" type="text/css" />*@

<link href="@Url.Content("~/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css")" rel="stylesheet" type="text/css" />
<!-- DataTables Responsive CSS -->
<link href="@Url.Content("~/bower_components/datatables-responsive/css/dataTables.responsive.css")" rel="stylesheet" type="text/css" />

<style>
    table.dataTable tbody tr.selected {
        background-color: #B0BED9;
    }
</style>
<div class="row">
    <div class="col-md-3">
        <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("AddKeyValue", "DocumentManagement")'"  onsubmit = "showProgress()" ><i class="fa fa-user-plus"></i> Add Template Key</button><br />
    </div>
    <div class="col-md-pull-9">
        <div class="navbar-form navbar-right blue-color">
            @if (ViewBag.Enable == "Active")
            {
                <input type="radio" name="editList" id="Active" value="Active" checked="checked" />
                <label for="Active">Active</label>

                <input type="radio" name="editList" id="Inactive" value="Inactive" />
                <label for="Inactive">In active</label>
            }
            else
            {
                <input type="radio" name="editList" id="Active" value="Active" />
                <label for="Active">Active</label>

                    <input type="radio" name="editList" id="Inactive" value="Inactive" checked="checked" />
                    <label for="Inactive">In active</label>
            }

        </div>
        @Html.DropDownList("Id", (IEnumerable<SelectListItem>)ViewBag.Categories, "Select Key Category", new { @class = "form-control" })
    </div>

</div>
@* keyword division - append *@

@*<div class="row">
    <div class="col-md-3">
        <button type="button" class="btn btn-default" onclick="Delete()"><i class="glyphicon glyphicon-remove-circle"></i> Delete</button><br />
    </div>
</div>*@
<div class="row">
    <div class="col-md-12">
        <table class="table table-striped table-hover dataTable table-custom-border" id="tblTemplateKeyList">
            <thead>
                <tr>
                    <th>#</th>

                    <th>
                        @Html.DisplayNameFor(model => model.TemplateKeyValue)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TemplateKeyLabels)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TemplateKeyDescription)
                    </th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @{int rowNo = 0;}
                @foreach (var item in Model)
                {
                    rowNo = rowNo + 1;
                    var css = "";
                    var ustatus = "";
                    var msg = "";
                    if (item.IsEnabled == true)
                    {
                        css = "glyphicon glyphicon-ok green-color";
                        ustatus = "Active";
                        msg = "deactivate";
                    }
                    else
                    {
                        css = "glyphicon glyphicon-remove red-color";
                        ustatus = "Inactive";
                        msg = "activate";
                    }
                    <tr>
                        <td>@rowNo</td>

                        <td>
                            @Html.DisplayFor(modelItem => item.TemplateKeyValue)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TemplateKeyLabels)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TemplateKeyDescription)
                        </td>
                        <td>
                            <a href="@Url.Action("EditKeyValue","DocumentManagement",new { id = item.TemplateKeyId })" title="Edit" class="fa fa-edit gray-color"></a>&nbsp;|
                            &nbsp;
                            <a href="javascript:void(0);" title="@ustatus" class="@css" onclick="ChangeStatus(@item.TemplateKeyId,'@msg')"></a>|
                            <a onclick="DeleteTemplate(@item.TemplateKeyId)" title="Delete" class="glyphicon glyphicon-trash"></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/bootbox")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/unobtrusive")
    <script src="@Url.Content("~/bower_components/datatables/media/js/jquery.dataTables.min.js")"></script>
    <script src="@Url.Content("~/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js")"></script>
    <script type="text/javascript">
            var selectedid;
            $(document).ready(function () {
                $('#tblTemplateKeyList').DataTable({
                    "dom": '<"top"f>rt<"bottom"lp><"clear">',
                    responsive: true
                });



                //var table = $('#tblTemplateKeyList').DataTable();

                //$('#tblTemplateKeyList tbody').on('click', 'tr', function () {

                //    console.log(table.row(this).data());
                //    $(this).toggleClass('selected');
                //    //selectedid = selectedid + id;
                //    //console.log(selectedid);
                //});

                //$('#tblTemplateKeyList tbody').on('click', 'tr', function () {
                //    var id = this.id;
                //    var index = $.inArray(id, selected);

                //    if (index === -1) {
                //        selected.push(id);
                //    } else {
                //        selected.splice(index, 1);
                //    }

                //    $(this).toggleClass('selected');
                //});

            });


            $('#Id').change(function () {


                debugger;
                $('#tblTemplateKeyList')
                var id = $('#Id').val();
                if (id != "") {
                    $.ajax({
                        async: true,
                        type: "POST",
                        dataType: 'JSON',
                        url: '@Url.Content("~/DocumentManagement/KeywordIndexId")',
                        data: {
                            Id: id,
                            enable: $("input[name='editList']:checked").val()
                        }


                    }).success(function (result) {
                        location.reload();

                    }).error(function (result) {
                        alert('Error!');
                    })
                }
                else
                    location.reload();
            });

            function ChangeStatus(id, msg) {
                bootbox.confirm({
                    title: 'Template key Activate / Deactivate',
                    message: 'Are you sure you want to ' + msg + ' this key value?',
                    buttons: {
                        'cancel': {
                            label: 'No',
                            className: 'btn-cancel pull-left'
                        },
                        'confirm': {
                            label: 'Yes',
                            className: 'btn-default pull-right'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: '@Url.Content("~/DocumentManagement/ActivateKeyValue")',
                                type: 'POST',
                                data: { id: id },
                                dataType: 'json',
                                success: function (result) { location.reload(); },
                                error: function () { alert('Error!'); }
                            });
                        }
                    }
                });
            }

            function Delete()
            {
                debugger;
                bootbox.confirm({
                    title: 'Delete Key',
                    message: 'Are you sure you want to delete this key?',
                    buttons: {
                        'cancel': {
                            label: 'No',
                            className: 'btn-cancel pull-left'
                        },
                        'confirm': {
                            label: 'Yes',
                            className: 'btn-default pull-right'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            var table = $('#tblTemplateKeyList').DataTable();

                            var rows = table.rows('.selected').data();

                            var aReturn = new Array();
                            table.$("tr").filter(".selected").each(function (index, row) {
                                aReturn.push(row);// this should work, if not try aReturn.push($(row));
                                //to get the information in the first column
                                aReturn.push($(row).eq(0).text());
                                console.log($(row).eq(1).text());
                            });
                            $.ajax({
                                url: '@Url.Content("~/DocumentManagement/DeleteKeyword")',
                                type: 'POST',
                                data: { id: id },
                                dataType: 'json',
                                success: function (result) { location.reload(); },
                                error: function () { alert('Error!'); }
                            });
                        }
                    }
                });
            }

            function DeleteTemplate(id, msg) {
                bootbox.confirm({
                    title: 'Delete Key',
                    message: 'Are you sure you want to delete this key?',
                    buttons: {
                        'cancel': {
                            label: 'No',
                            className: 'btn-cancel pull-left'
                        },
                        'confirm': {
                            label: 'Yes',
                            className: 'btn-default pull-right'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.ajax({
                                url: '@Url.Content("~/DocumentManagement/DeleteKeyword")',
                                type: 'POST',
                                data: { id: id },
                                dataType: 'json',
                                success: function (result) { location.reload(); },
                                error: function () { alert('Error!'); }
                            });
                        }
                    }
                });
            }

        $("input[name='editList']").change(function () {
            debugger;
            var enable = $("input[name='editList']:checked").val();
            var id = $('#Id').val()
            if (id = " ")
                id = 0;

            $.ajax({
                async: true,
                type: "POST",
                dataType: 'JSON',
                url: '@Url.Content("~/DocumentManagement/KeywordIndexId")',
                data: {
                    Id: id,
                    enable: $("input[name='editList']:checked").val()
                }


            }).success(function (result) {
                location.reload();

            }).error(function (result) {
                alert('Error!');
            })

            location.href = url;

        });

    </script>
}
