@model IEnumerable<VirtualAdvocate.Models.InvoiceListModel>
@{
    ViewBag.MenuActive = "InvoiceList";
    Layout = "~/Views/Shared/_Layoutmain.cshtml";
}

<h2>INVOICE LIST</h2>

<!-- DataTables CSS -->
<link href="@Url.Content("~/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css")" rel="stylesheet" type="text/css" />
<!-- DataTables Responsive CSS -->
<link href="@Url.Content("~/bower_components/datatables-responsive/css/dataTables.responsive.css")" rel="stylesheet" type="text/css" />

<div class="row">
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-9">
                <div class="navbar-form navbar-right" role="search">
                </div>
            </div>
        </div>
        <table class="table table-striped table-hover dataTable table-custom-border" id="tblInvoiceList">
            <thead>
                <tr>
                    <th>#</th>
                    <th>
                        Document Title
                    </th>
                    <th>
                        Customer Name
                    </th>
                    <th>
                        Date Created
                    </th>
                    <th>Generate Invoice</th>                 
                    <th>Paid Status</th>
                </tr>
            </thead>
            <tbody>
                @{int rowNo = 0;
                    int tempGroupId = 0;
                    var outlinecss = "";
                    var coverletter = 0;
                }
                @foreach (var item in Model)
                {
                    rowNo = rowNo + 1;
                    if (rowNo == 1)
                    {
                        tempGroupId = item.groupid;
                        coverletter = 1;
                    }
                    if (rowNo > 1)
                    {
                        if (item.groupid != tempGroupId)
                        {

                            outlinecss = "outline-table";
                            coverletter = 1;
                        }
                        else { outlinecss = ""; }

                    }

                    var css = "";
                    var ustatus = "";
                    var msg = "";
                    if (item.PaidStatus == true)
                    {
                        css = "glyphicon glyphicon-ok green-color";
                        ustatus = "Paid";
                        msg = "false";
                    }
                    else if (item.InvoiceDocumentName == null)
                    {
                        css = "";
                        ustatus = "Not Paid";
                        msg = "false";
                    }
                    else
                    {
                        css = "glyphicon glyphicon-remove red-color";
                        ustatus = "Not Paid";
                        msg = "true";
                    }

                    <tr class="@outlinecss">
                        <td>@rowNo</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DocumentTitle)
                        </td>
                        <td>
@if (coverletter == 1) { @Html.DisplayFor(modelItem => item.CustomerName)}
                            
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td>
                            @if (coverletter == 1)
                            {
                                if (item.InvoiceDocumentName != null)
                                {
                                    <a href="~/Invoices/@item.InvoiceDocumentName.Replace(".docx",".pdf")" target="_blank" title="Download">View</a>
                                }
                                else
                                {
                                    if (Convert.ToInt32(Session["RoleId"]) == 1)
                                    {
                                        <a href="@Url.Action("GenerateInvoice","DocumentManagement", new {@id=item.CustomerId ,@groupid = item.groupid })" title="Manual Invoice">Generate </a>
                                        @*<a href="#" onclick="GenerateInvoice(@item.CustomerId,@item.groupid)" title="Generate"> Auto </a>*@
                                    }
                                }

                            }

                        </td>
                       
                        <td> 
                            @if (coverletter == 1)
                            {
                                <a href="javascript:;" name="Edit" class="@css" onclick="ChangeStatus(@item.CustomerId,@item.groupid,@msg)"></a>
                            }
                                                    
                        </td>

                      
                    </tr>

                    tempGroupId = item.groupid;
                    coverletter = 0;

                }
            </tbody>
        </table>
    </div>
</div>
@section Scripts {
@Scripts.Render("~/bundles/bootbox")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/unobtrusive")
<script src="@Url.Content("~/bower_components/datatables/media/js/jquery.dataTables.min.js")"></script>
<script src="@Url.Content("~/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js")"></script>
    <script type="text/javascript">
            $(document).ready(function () {
                $('#tblInvoiceList').DataTable({
                    "dom": '<"top"f>rt<"bottom"lp><"clear">',
                    "ordering": false,
                    responsive: true
                });

            });
          

        // Hide sort option for Last column in data table

        //aoColumnDefs: [
        //                  {
        //                      bSortable: false,
        //                      aTargets: [-1]
        //                  }
        //              ]


        function GenerateInvoice(id,groupid) {
            bootbox.confirm({
                title: 'Generate Invoice',
                message: 'Are you sure you want to generate invoice for this document?',
                buttons: {
                    'cancel': {
                        label: 'No',
                        className: 'btn-cancel pull-left'
                    },
                    'confirm': {
                        label: 'Yes',
                        className: 'btn-default pull-right'
                    }
                },
                callback: function (result) {
                    if (result) {
                        showProgress();
                        $.ajax({
                            url: '@Url.Content("~/DocumentManagement/AutoGenerateInvoice")',
                            type: 'POST',
                            data: { customerid: id, groupid :groupid},
                            dataType: 'json',
                            success: function (result) { location.reload(); },
                            error: function () { alert('Error!'); }
                        });
                    }
                }
            });
        }


        function ChangeStatus(id,groupid,status) {
            bootbox.confirm({
                title: 'Change Paid Status',
                message: 'Are you sure you want to change the payment status?',
                buttons: {
                    'cancel': {
                        label: 'No',
                        className: 'btn-cancel pull-left'
                    },
                    'confirm': {
                        label: 'Yes',
                        className: 'btn-default pull-right'
                    }
                },
                callback: function (result) {
                    if (result) {
                        showProgress();
                        $.ajax({
                            url: '@Url.Content("~/DocumentManagement/PaymentStatus")',
                            type: 'POST',
                            data: { customerid: id, groupid: groupid, status: status },
                            dataType: 'json',
                            success: function (result) { location.reload(); },
                            error: function () { alert('Error!'); }
                        });
                    }
                }
            });
        }

        var spinnerVisible = false;
        function showProgress() {
            if (!spinnerVisible) {
                $("div#spinner").fadeIn("fast");
                spinnerVisible = true;

            }
        };
        function hideProgress() {
            if (spinnerVisible) {
                var spinner = $("div#spinner");
                spinner.stop();
                spinner.fadeOut("fast");
                spinnerVisible = false;
            }
        };
    </script>
}
